// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address[6..4],a=ramload1,b=ramload2,c=ramload3,d=ramload4,e=ramload5,f=ramload6,g=ramload7,h=ramload8);
	RAM64(in=in, load=ramload1,address=address[0..5], out=ram1out);
	RAM64(in=in, load=ramload2,address=address[0..5], out=ram2out);
	RAM64(in=in, load=ramload3,address=address[0..5], out=ram3out);
	RAM64(in=in, load=ramload4,address=address[0..5], out=ram4out);
	RAM64(in=in, load=ramload5,address=address[0..5], out=ram5out);
	RAM64(in=in, load=ramload6,address=address[0..5], out=ram6out);
	RAM64(in=in, load=ramload7,address=address[0..5], out=ram7out);
	RAM64(in=in, load=ramload8,address=address[0..5], out=ram8out);
	Mux8Way(a=ram1out,b=ram2out,c=ram3out,d=ram4out,e=ram5out,f=ram6out,g=ram7out,h=ram8out,sel=address[6..8],out=out);

}